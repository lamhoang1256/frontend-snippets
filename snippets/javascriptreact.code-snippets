{
  "Display time VN": {
    "prefix": "format-date-vn",
    "body": ["{new Date($1).toLocaleDateString(\"vi-VI\")}", "", ""],
    "description": "Display time VN"
  },
  "Quick copy to clipboard": {
    "prefix": "clipboard-copy",
    "body": ["navigator.clipboard?.writeText && navigator.clipboard.writeText($1);"],
    "description": "Quick copy to clipboard"
  },
  "Scroll to top": {
    "prefix": "scroll-to-top",
    "body": ["document.body.scrollIntoView({ behavior: \"smooth\", block: \"start\" });"],
    "description": "Scroll to top"
  },
  "Scroll to bottom": {
    "prefix": "scroll-to-bottom",
    "body": ["document.body.scrollIntoView({ behavior: \"smooth\", block: \"end\" });"],
    "description": "Scroll to bottom"
  },
  "Using PropTypes in React": {
    "prefix": "react-proptypes",
    "body": [
      "import PropTypes from \"prop-types\";",
      "$1.propTypes = {",
      "  // value: PropTypes.string",
      "}"
    ],
    "description": "Using PropTypes in React"
  },
  "Import styled-components in React": {
    "prefix": "react-styled-c",
    "body": ["import styled from \"styled-components\";", ""],
    "description": "Import styled-components in React"
  },
  "Using react hook form in react": {
    "prefix": "react-hook-form",
    "body": [
      "const {",
      "  control,",
      "  setValue,",
      "  getValues,",
      "  watch,",
      "  formState: { isValid, isSubmitting, errors },",
      "} = useForm({",
      "  mode: \"onChange\",",
      "  defaultValues: {},",
      "});"
    ],
    "description": "Using react hook form in react"
  },
  "Console Log": {
    "prefix": "clg",
    "body": ["console.log(${1})"],
    "description": "Console log"
  },
  "Set Interval": {
    "prefix": "set-interval",
    "body": ["setInterval(() => { ${1} }, ${2})"],
    "description": "setInterval(() => { }, intervalTime"
  },
  "Set TimeOut": {
    "prefix": "set-timeout",
    "body": ["setTimeout(() => { ${1} }, ${2})"],
    "description": "setTimeout(() => { }, delayTime"
  },
  "Query Selector": {
    "prefix": "qs",
    "body": ["document.querySelector('$1');"],
    "description": "Query Selector"
  },
  "Query Selector All": {
    "prefix": "qsa",
    "body": ["document.querySelectorAll('$1');"],
    "description": "Query Selector All"
  },
  "Click addEventListener": {
    "prefix": "eclick",
    "body": ["$1.addEventListener('click', function(){", " $2 ", "})"],
    "description": "Click addEventListener"
  },
  "import moduleName from module": {
    "prefix": "imp",
    "body": ["import ${2} from '${1}'"],
    "description": "import moduleName from 'module'"
  },
  "useEffect With CleanUp": {
    "prefix": "useEffectCleanup",
    "body": [
      "useEffect(() => {",
      "  ${1}",
      "",
      "  return () => {",
      "    ${2}",
      "  }",
      "}, [${3}])",
      ""
    ],
    "description": "useEffect With CleanUp",
    "scope": "typescript,typescriptreact,javascript,javascriptreact"
  },
  "useEffect": {
    "prefix": "useEffect",
    "body": ["useEffect(() => {", "  ${1}", "", "}, [${2}])", ""],
    "description": "useEffect",
    "scope": "typescript,typescriptreact,javascript,javascriptreact"
  },
  "React array rendering list": {
    "prefix": "render-array-list",
    "body": ["{Array($1).fill(0).map((item, index) => (", "<div key={index}>$2</div>", "))}"],
    "description": "React array rendering list"
  },
  "Classname styles module": {
    "prefix": "clsm",
    "body": ["className={styles.$1}"],
    "description": "Classname styles module"
  },
  "Import const styles module": {
    "prefix": "styles-module",
    "body": ["import styles from '$1'"],
    "description": "Import const styles module"
  },
  "Arrow Function Component": {
    "prefix": "rafc",
    "body": [
      "import React from 'react'",
      "",
      "export const ${1:${TM_FILENAME_BASE}} = () => {",
      "  return (",
      "    <div>${1:first}</div>",
      "  )",
      "}",
      ""
    ],
    "description": "Arrow Function Component"
  },
  "Arrow Function Export Component": {
    "prefix": "rafce",
    "body": [
      "import React from 'react'",
      "",
      "const ${1:${TM_FILENAME_BASE}} = () => {",
      "  return (",
      "    <div>${1:first}</div>",
      "  )",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ],
    "description": "Arrow Function Export Component"
  },
  "Arrow Function Component Styled Components": {
    "prefix": "rafce-styled",
    "body": [
      "import styled from 'styled-components'",
      "",
      "const Styled${1:${TM_FILENAME_BASE}} = styled.div`",
      "  $2",
      "`",
      "",
      "const ${1:${TM_FILENAME_BASE}} = () => {",
      "  return (",
      "    <Styled${1:${TM_FILENAME_BASE}}>${1:${TM_FILENAME_BASE}}</Styled${1:${TM_FILENAME_BASE}}>",
      "  )",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ],
    "description": "Arrow Function Component Styled Components"
  }
}
